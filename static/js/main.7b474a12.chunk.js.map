{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","console","log","_this$state","filterRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.7b474a12.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n   <div>\r\n        {\r\n         robots.map((user, i) => {\r\n          return (\r\n                <Card \r\n                key={robots[i].id} \r\n                id={robots[i].id}\r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n                />\r\n              );\r\n           })\r\n        }\r\n        </div>\r\n  );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input \r\n      className='tc pa3 ba b--green bg-lightest-blue'\r\n      type='search' \r\n      placeholder='search robots'\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ \r\n      overflowY: 'scroll', \r\n      border: '1px solid black', \r\n      height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n  componentDidCatch(error, info){\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError \r\n    ? <h1>Ooooops thats not good</h1> \r\n    : this.props.children\r\n  }\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users =>this.setState({robots: users}));\r\n    console.log(\"componentDidMount\");\r\n  }\r\n\r\n  onSearchChange =(event)=>{\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield} = this.state;\r\n    const filterRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n\r\n    return !robots.length ?\r\n    <h1>Loading...</h1>:\r\n      (\r\n      <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1> \r\n        <SearchBox searchChange = {this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filterRobots}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = createRoot(document.getElementById('root'));\n\nroot.render(\n  <div>\n   <App/>\n  </div>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}